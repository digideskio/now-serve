#!/usr/bin/env node

import fs from 'fs-extra'
import tmp from 'tmp'
import md5 from 'md5'
import path from 'path'

import { walk } from 'walk'

const current = path.parse(process.cwd()),
      uniqueIdentifier = md5(current)

let pkgDefaults = {
  name: 'ns',
  version: '1.0.0',
  scripts: {
    start: 'http-server'
  },
  dependencies: {
    'http-server': 'latest'
  }
}

const ignore = [
  'node_modules'
]

const pkgContent = JSON.stringify(pkgDefaults, null, 2)
let tmpDir = false

try {
  tmpDir = tmp.dirSync({
    name: `now-serve-${uniqueIdentifier}`,
    keep: true
  })
} catch (err) {
  throw err
}

const walker = walk(process.cwd(), {
  filters: [
    'node_modules'
  ]
})

let hasPackage = false

walker.on('file', (root, fileStats, next) => {
  if (fileStats.name === 'package.json') {
    hasPackage = true
  }

  const file = path.join(root, fileStats.name),
        target = path.join(tmpDir.name, path.relative(process.cwd(), file))

  fs.copy(file, target, err => {
    if (err) throw err
    next()
  })
})

walker.on('end', () => {
  console.log(hasPackage)
})

/*
const pkgPath = path.join(tmpDir.name, 'package.json')

try {
  fs.writeJSONSync(pkgPath, pkgDefaults)
} catch (err) {
  throw err
}*/

setTimeout(() => {
  fs.remove(tmpDir.name, err => {
    if (err) throw err
  })
}, 10000)
